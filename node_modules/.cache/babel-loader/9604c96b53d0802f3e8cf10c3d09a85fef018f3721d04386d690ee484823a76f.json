{"ast":null,"code":"var _jsxFileName = \"/Users/alisonrobichaux/Desktop/Coursework/Capstone/capstone-ecom-final/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = _ref => {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Initial state is false, indicating the user is not logged in\n\n  const login = () => {\n    // Perform login logic, then set isLoggedIn to true\n    setIsLoggedIn(true);\n  };\n  const logout = () => {\n    // Perform logout logic, then set isLoggedIn to false\n    setIsLoggedIn(false);\n  };\n\n  // Provide the context value with isLoggedIn, login, and logout functions\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","AuthContext","useAuth","AuthProvider","children","isLoggedIn","setIsLoggedIn","login","logout"],"sources":["/Users/alisonrobichaux/Desktop/Coursework/Capstone/capstone-ecom-final/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Initial state is false, indicating the user is not logged in\n\n  const login = () => {\n    // Perform login logic, then set isLoggedIn to true\n    setIsLoggedIn(true);\n  };\n\n  const logout = () => {\n    // Perform logout logic, then set isLoggedIn to false\n    setIsLoggedIn(false);\n  };\n\n  // Provide the context value with isLoggedIn, login, and logout functions\n  return (\n    <AuthContext.Provider value={{ isLoggedIn, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAEnE,MAAMC,WAAW,gBAAGH,aAAa,EAAE;AAEnC,OAAO,MAAMI,OAAO,GAAG,MAAM;EAAA;EAC3B,OAAOH,UAAU,CAACE,WAAW,CAAC;AAChC,CAAC;AAAC,GAFWC,OAAO;AAIpB,OAAO,MAAMC,YAAY,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACvC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErD,MAAMO,KAAK,GAAG,MAAM;IAClB;IACAD,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAME,MAAM,GAAG,MAAM;IACnB;IACAF,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;;EAED;EACA,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAED,UAAU;MAAEE,KAAK;MAAEC;IAAO,CAAE;IAAA,UACxDJ;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AAE3B,CAAC;AAAC,IAnBWD,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}